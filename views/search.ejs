<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, shrink-to-fit=no"
    />

    <!-- Bootstrap CSS -->
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.min.css"
      integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh"
      crossorigin="anonymous"
    />

    <!-- css 파일 연동하기 -->
    <link rel="stylesheet" href="/public/main.css" />

    <title>YB App</title>
  </head>
  <body>
    <!-- 지금 파일의 상대 경로를 이용하여 html 가져오기 -->
    <%- include('nav.html') %>

    <!-- EJS(or pug) : HTML template engine -->
    <h4 class="ml-2 my-3 text-center">검색 결과</h4>

    <!-- form tag를 이용한 Search 구현 -->
    <div class="container input-group mb-2">
      <input id="search-input" class="form-control" name="searchData" />
      <button id="search" class="input-group-append btn btn-danger ml-2">
        Search
      </button>
    </div>

    <div class="container">
      <ul class="list-group">
        <% for (let i = 0; i < posts.length; i++) { %>
        <li class="list-group-item">
          <p>글 번호 : <%= posts[i]._id %></p>
          <h4 class="title" herf="/detail">
            할일 제목 :
            <a href="/detail/<%= posts[i]._id %>"><%= posts[i].title %> </a>
          </h4>

          <p>마감 날짜 : <%= posts[i].date %></p>
          <!-- HTML form tag를 이용해도 Delete 요청은 따로 할 수 없다 => JavaScript AJAX 활용하면 된다. -->
          <!-- AJAX : 새로고침 없이 서버와 통신할 수 있는 자바스크립트 문법 -->
          <button
            type="button"
            class="btn btn-danger delete"
            data-id="<%= posts[i]._id %>"
          >
            삭제
          </button>
          <button
            type="button"
            class="btn btn-danger edit"
            data-id="<%= posts[i]._id %>"
          >
            수정
          </button>
        </li>
        <% } %>
      </ul>
    </div>

    <!-- CDN 방식의 jquery 설치 : 해당 코드 이후에 jquery를 활용할 수 있다. -->
    <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>

    <script>
      // class명이 delete인 요소를 클릭하면 callback실행
      $(".delete").click(function (e) {
        let postNum = e.target.dataset.id;
        let target = $(this);
        // e.target : 지금 클릭한 것
        // this : 지금 이벤트 동작하는 곳
        // 화살표 함수를 쓰면 this가 binding되지 않는다.(this 기능이 없다!)
        // 화살표 함수를 쓸 때는 없을때는 $(e.target) => e.target에 jquery기능을 붙일때 $()에 넣고 조작한다.

        // 삭제가 되긴 하지만 AJAX는 기본적으로 새로고침이 안된다.
        $.ajax({
          method: "DELETE",
          url: "/delete",
          data: { _id: postNum },
        })
          .done(function (result) {
            // AJAX 요청이 성공 하면 해당 callback 실행
            // 여기서 새로 고침하거나 li요소를 안보이거나 하는 방법을 넣어줘야함
            console.log("성공함, resutl :", result);

            // target.parent = li tag
            target.parent("li").fadeOut();
            // fadeOut : 서서히 사라지게 해주는 script
          })
          .fail(function (xhr, testStatus, errorThrown) {
            console.log(xhr, testStatus, errorThrown);
          });
      });

      // 해당 게시물 제목 클릭시 상세페이지 나오기
      $(".edit").click(function (e) {
        let postNum = e.target.dataset.id;
        $.ajax({
          method: "GET",
          url: `/edit/${postNum}`,
        })
          .done((data) => {
            console.log(postNum);
          })
          .fail();
      });

      // search input "GET" 요청하기
      $("#search").click(function () {
        console.log("clicked");
        // jqeury에서 input value 가져 오는법
        const searchData = $("#search-input").val();
        // 현재 페이지 url 바꾸는 방법 (= GET 요청이랑 똑같은 작용을 함)
        window.location.replace(`/search?value=${searchData}`);
      });

      // query 여러개 한번에 조작하는 jquery 문법

      // var 자료 = { 이름1: '갑1', 이름2: "값2", ...}
      // $.params(자료) => ?이름1=값1&이름2=값2 ...

      // $(form tag).serialize() => ?name1=vale1&name2=value2 ... 폼태그 안에 인풋값 모드 query로 바꿔줌
    </script>

    <!-- Optional JavaScript -->
    <!-- Popper.js, then Bootstrap JS -->
    <script
      src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"
      integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/js/bootstrap.min.js"
      integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6"
      crossorigin="anonymous"
    ></script>
  </body>
</html>
